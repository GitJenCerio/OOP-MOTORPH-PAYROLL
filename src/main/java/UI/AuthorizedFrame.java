
package UI;

import AccessControl.Roles;
import entities.Employee;
import DatabaseConnection.*;
import DatabaseConnection.DatabaseUserDAO.DatabaseException;
import UI.AddEmployeeFrame;
import UI.AddUserFrame;
import UI.UpdateUserFrame;
import authentication.AuthenticateUser;
import authentication.AuthenticationService;
import authentication.LoginController;
import entities.User;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import static javax.swing.JTable.AUTO_RESIZE_OFF;
import static javax.swing.JTable.AUTO_RESIZE_SUBSEQUENT_COLUMNS;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

public class AuthorizedFrame extends javax.swing.JFrame {

    private final DatabaseEmployeeDAO employeeDAO;
    private final DatabaseUserDAO userDAO = new DatabaseUserDAO();
    private LoginController loginController;
    
    // User details
    private int userId;
    private int userRole;
   
    
    public AuthorizedFrame(int userId, int userRole) {
        this.userId = userId;
        this.userRole = userRole;
        this.employeeDAO = new DatabaseEmployeeDAO();
   
        initComponents();
        displayUserInfo(userId);
        initializeDependencies();
        simulateHomeButtonClick();
       
        
        String usersTableName = "users"; // Use your actual table name for users
        String[] usersColumnNames = {"UserID", "EmployeeID", "Username", "UserPassword", "RoleID"}; // Example column names for users
        boolean usersMaskPassword = true; // Example flag for masking passwords
        usersTable = new CustomTable(usersTableName, usersColumnNames, usersMaskPassword);
        usersTable.setAutoResizeMode(AUTO_RESIZE_SUBSEQUENT_COLUMNS);
        jScrollPane1.setViewportView(usersTable);

        
       String employeesTableName = "employees"; // Use your actual table name for employees
       String[] employeesColumnNames = {"EmployeeID", "LastName", "FirstName", "Birthday", "Address","PhoneNumber", "EmpStatus", "Position", "SupervisorID","SSSNumber", "PhilhealthNumber", "PagibigNumber", "TinNumber","BasicSalary", "RiceSubsidy","PhoneAllowance", "ClothingAllowance","GrossSemiMonthlyRate","HourlyRate","DepartmentID"};
       boolean employeesMaskPassword = true; 
       employeesTable = new CustomTable(employeesTableName, employeesColumnNames, employeesMaskPassword);
       jScrollPane2.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
       jScrollPane2.setViewportView(employeesTable);
      
             
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        headerLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        homeBtn = new UI.RoundedButton();
        usersBtn = new UI.RoundedButton();
        employeesBtn = new UI.RoundedButton();
        payrollBtn = new UI.RoundedButton();
        requestsBtn = new UI.RoundedButton();
        taxReportsBtn = new UI.RoundedButton();
        disputesBtn = new UI.RoundedButton();
        logoutBtn = new UI.RoundedButton();
        jLabel2 = new javax.swing.JLabel();
        loggedInUserName = new javax.swing.JLabel();
        loggedInUserPosition = new javax.swing.JLabel();
        contentPanel = new javax.swing.JPanel();
        homePanel = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        usersPanel = new javax.swing.JPanel();
        addUserBtn = new UI.RoundedButton();
        updateBtn = new UI.RoundedButton();
        deleteBtn = new UI.RoundedButton();
        roundedTextField1 = new UI.RoundedTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        usersTable = new UI.CustomTable();
        employeesPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        employeesTable = new UI.CustomTable();
        addEmployeeBtn = new UI.RoundedButton();
        updateEmployeeBtn = new UI.RoundedButton();
        deleteEmployeeBtn = new UI.RoundedButton();
        payrollPanel = new javax.swing.JPanel();
        requestsPanel = new javax.swing.JPanel();
        taxReportsPanel = new javax.swing.JPanel();
        disputesPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1300, 1000));
        setMinimumSize(new java.awt.Dimension(1200, 800));
        setPreferredSize(new java.awt.Dimension(1200, 800));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/MotorPH-Small.png"))); // NOI18N

        headerLabel.setFont(new java.awt.Font("MuseoModerno Medium", 0, 36)); // NOI18N
        headerLabel.setForeground(new java.awt.Color(0, 51, 204));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(76, 76, 76)
                .addComponent(headerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(700, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(headerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setBackground(new java.awt.Color(4, 14, 163));
        jPanel2.setPreferredSize(new java.awt.Dimension(260, 580));

        homeBtn.setBackground(new java.awt.Color(0, 182, 206));
        homeBtn.setBorder(null);
        homeBtn.setForeground(new java.awt.Color(255, 255, 255));
        homeBtn.setText("Home");
        homeBtn.setAlignmentY(0.0F);
        homeBtn.setBorderColor(new java.awt.Color(4, 14, 163));
        homeBtn.setBorderPainted(false);
        homeBtn.setColor(new java.awt.Color(0, 182, 206));
        homeBtn.setColorClick(new java.awt.Color(153, 153, 153));
        homeBtn.setColorOver(new java.awt.Color(0, 102, 204));
        homeBtn.setFocusPainted(false);
        homeBtn.setFont(new java.awt.Font("Poppins SemiBold", 0, 14)); // NOI18N
        homeBtn.setIconTextGap(3);
        homeBtn.setMargin(new java.awt.Insets(2, 14, 2, 14));
        homeBtn.setPreferredSize(new java.awt.Dimension(150, 32));
        homeBtn.setRadius(25);
        homeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeBtnActionPerformed(evt);
            }
        });

        usersBtn.setBackground(new java.awt.Color(0, 182, 206));
        usersBtn.setBorder(null);
        usersBtn.setForeground(new java.awt.Color(255, 255, 255));
        usersBtn.setText("Users");
        usersBtn.setAlignmentY(0.0F);
        usersBtn.setBorderColor(new java.awt.Color(4, 14, 163));
        usersBtn.setColor(new java.awt.Color(0, 182, 206));
        usersBtn.setColorClick(new java.awt.Color(153, 153, 153));
        usersBtn.setColorOver(new java.awt.Color(0, 102, 204));
        usersBtn.setFocusPainted(false);
        usersBtn.setFont(new java.awt.Font("Poppins SemiBold", 0, 14)); // NOI18N
        usersBtn.setIconTextGap(3);
        usersBtn.setMargin(new java.awt.Insets(2, 14, 2, 14));
        usersBtn.setPreferredSize(new java.awt.Dimension(150, 32));
        usersBtn.setRadius(25);
        usersBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usersBtnActionPerformed(evt);
            }
        });

        employeesBtn.setBackground(new java.awt.Color(0, 182, 206));
        employeesBtn.setBorder(null);
        employeesBtn.setForeground(new java.awt.Color(255, 255, 255));
        employeesBtn.setText("Employees");
        employeesBtn.setAlignmentY(0.0F);
        employeesBtn.setBorderColor(new java.awt.Color(4, 14, 163));
        employeesBtn.setColor(new java.awt.Color(0, 182, 206));
        employeesBtn.setColorClick(new java.awt.Color(153, 153, 153));
        employeesBtn.setColorOver(new java.awt.Color(0, 102, 204));
        employeesBtn.setFocusPainted(false);
        employeesBtn.setFont(new java.awt.Font("Poppins SemiBold", 0, 14)); // NOI18N
        employeesBtn.setIconTextGap(3);
        employeesBtn.setMargin(new java.awt.Insets(2, 14, 2, 14));
        employeesBtn.setPreferredSize(new java.awt.Dimension(150, 32));
        employeesBtn.setRadius(25);
        employeesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeesBtnActionPerformed(evt);
            }
        });

        payrollBtn.setBackground(new java.awt.Color(0, 182, 206));
        payrollBtn.setBorder(null);
        payrollBtn.setForeground(new java.awt.Color(255, 255, 255));
        payrollBtn.setText("Payroll");
        payrollBtn.setAlignmentY(0.0F);
        payrollBtn.setBorderColor(new java.awt.Color(4, 14, 163));
        payrollBtn.setColor(new java.awt.Color(0, 182, 206));
        payrollBtn.setColorClick(new java.awt.Color(153, 153, 153));
        payrollBtn.setColorOver(new java.awt.Color(0, 102, 204));
        payrollBtn.setFocusPainted(false);
        payrollBtn.setFont(new java.awt.Font("Poppins SemiBold", 0, 14)); // NOI18N
        payrollBtn.setIconTextGap(3);
        payrollBtn.setMargin(new java.awt.Insets(2, 14, 2, 14));
        payrollBtn.setPreferredSize(new java.awt.Dimension(150, 32));
        payrollBtn.setRadius(25);
        payrollBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payrollBtnActionPerformed(evt);
            }
        });

        requestsBtn.setBackground(new java.awt.Color(0, 182, 206));
        requestsBtn.setBorder(null);
        requestsBtn.setForeground(new java.awt.Color(255, 255, 255));
        requestsBtn.setText("Requests");
        requestsBtn.setAlignmentY(0.0F);
        requestsBtn.setBorderColor(new java.awt.Color(4, 14, 163));
        requestsBtn.setColor(new java.awt.Color(0, 182, 206));
        requestsBtn.setColorClick(new java.awt.Color(153, 153, 153));
        requestsBtn.setColorOver(new java.awt.Color(0, 102, 204));
        requestsBtn.setFocusPainted(false);
        requestsBtn.setFont(new java.awt.Font("Poppins SemiBold", 0, 14)); // NOI18N
        requestsBtn.setIconTextGap(3);
        requestsBtn.setMargin(new java.awt.Insets(2, 14, 2, 14));
        requestsBtn.setPreferredSize(new java.awt.Dimension(150, 32));
        requestsBtn.setRadius(25);
        requestsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestsBtnActionPerformed(evt);
            }
        });

        taxReportsBtn.setBackground(new java.awt.Color(0, 182, 206));
        taxReportsBtn.setBorder(null);
        taxReportsBtn.setForeground(new java.awt.Color(255, 255, 255));
        taxReportsBtn.setText("Tax Reports");
        taxReportsBtn.setAlignmentY(0.0F);
        taxReportsBtn.setBorderColor(new java.awt.Color(4, 14, 163));
        taxReportsBtn.setColor(new java.awt.Color(0, 182, 206));
        taxReportsBtn.setColorClick(new java.awt.Color(153, 153, 153));
        taxReportsBtn.setColorOver(new java.awt.Color(0, 102, 204));
        taxReportsBtn.setFocusPainted(false);
        taxReportsBtn.setFont(new java.awt.Font("Poppins SemiBold", 0, 14)); // NOI18N
        taxReportsBtn.setIconTextGap(3);
        taxReportsBtn.setMargin(new java.awt.Insets(2, 14, 2, 14));
        taxReportsBtn.setPreferredSize(new java.awt.Dimension(150, 32));
        taxReportsBtn.setRadius(25);
        taxReportsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                taxReportsBtnActionPerformed(evt);
            }
        });

        disputesBtn.setBackground(new java.awt.Color(0, 182, 206));
        disputesBtn.setBorder(null);
        disputesBtn.setForeground(new java.awt.Color(255, 255, 255));
        disputesBtn.setText("Disputes");
        disputesBtn.setAlignmentY(0.0F);
        disputesBtn.setBorderColor(new java.awt.Color(4, 14, 163));
        disputesBtn.setColor(new java.awt.Color(0, 182, 206));
        disputesBtn.setColorClick(new java.awt.Color(153, 153, 153));
        disputesBtn.setColorOver(new java.awt.Color(0, 102, 204));
        disputesBtn.setFocusPainted(false);
        disputesBtn.setFont(new java.awt.Font("Poppins SemiBold", 0, 14)); // NOI18N
        disputesBtn.setIconTextGap(3);
        disputesBtn.setMargin(new java.awt.Insets(2, 14, 2, 14));
        disputesBtn.setPreferredSize(new java.awt.Dimension(150, 32));
        disputesBtn.setRadius(25);
        disputesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disputesBtnActionPerformed(evt);
            }
        });

        logoutBtn.setBackground(new java.awt.Color(0, 182, 206));
        logoutBtn.setBorder(null);
        logoutBtn.setForeground(new java.awt.Color(255, 255, 255));
        logoutBtn.setText("Logout");
        logoutBtn.setAlignmentY(0.0F);
        logoutBtn.setBorderColor(new java.awt.Color(4, 14, 163));
        logoutBtn.setColor(new java.awt.Color(0, 182, 206));
        logoutBtn.setColorClick(new java.awt.Color(102, 102, 102));
        logoutBtn.setColorOver(new java.awt.Color(0, 102, 204));
        logoutBtn.setFocusPainted(false);
        logoutBtn.setFont(new java.awt.Font("Poppins SemiBold", 0, 14)); // NOI18N
        logoutBtn.setIconTextGap(3);
        logoutBtn.setMargin(new java.awt.Insets(2, 14, 2, 14));
        logoutBtn.setPreferredSize(new java.awt.Dimension(150, 32));
        logoutBtn.setRadius(25);
        logoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBtnActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons8-test-account-64.png"))); // NOI18N

        loggedInUserName.setFont(new java.awt.Font("Poppins SemiBold", 1, 12)); // NOI18N
        loggedInUserName.setForeground(new java.awt.Color(255, 255, 255));

        loggedInUserPosition.setFont(new java.awt.Font("Poppins Medium", 0, 12)); // NOI18N
        loggedInUserPosition.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(homeBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(usersBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(employeesBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(payrollBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(requestsBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(taxReportsBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(disputesBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(logoutBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(loggedInUserName, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(loggedInUserPosition, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(loggedInUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(loggedInUserPosition, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addComponent(homeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usersBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(employeesBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(payrollBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(requestsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(taxReportsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(disputesBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 134, Short.MAX_VALUE)
                .addComponent(logoutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.LINE_START);

        contentPanel.setBackground(new java.awt.Color(255, 204, 255));
        contentPanel.setLayout(new java.awt.CardLayout());

        homePanel.setBackground(new java.awt.Color(240, 243, 252));

        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/MotorPH-Big.png"))); // NOI18N
        jLabel22.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel23.setFont(new java.awt.Font("Poppins Medium", 1, 60)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(0, 0, 153));
        jLabel23.setText("Payroll System");

        javax.swing.GroupLayout homePanelLayout = new javax.swing.GroupLayout(homePanel);
        homePanel.setLayout(homePanelLayout);
        homePanelLayout.setHorizontalGroup(
            homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePanelLayout.createSequentialGroup()
                .addGap(234, 234, 234)
                .addGroup(homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(homePanelLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel23))
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        homePanelLayout.setVerticalGroup(
            homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel23)
                .addContainerGap(174, Short.MAX_VALUE))
        );

        contentPanel.add(homePanel, "card3");

        usersPanel.setBackground(new java.awt.Color(240, 243, 252));

        addUserBtn.setBackground(new java.awt.Color(4, 14, 163));
        addUserBtn.setBorder(null);
        addUserBtn.setForeground(new java.awt.Color(255, 255, 255));
        addUserBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons8-add-user-24.png"))); // NOI18N
        addUserBtn.setText("Add New");
        addUserBtn.setAlignmentY(0.0F);
        addUserBtn.setBorderColor(new java.awt.Color(0, 102, 204));
        addUserBtn.setBorderPainted(false);
        addUserBtn.setColor(new java.awt.Color(4, 14, 163));
        addUserBtn.setColorClick(new java.awt.Color(0, 102, 204));
        addUserBtn.setColorOver(new java.awt.Color(0, 102, 204));
        addUserBtn.setFocusPainted(false);
        addUserBtn.setFont(new java.awt.Font("Poppins SemiBold", 0, 14)); // NOI18N
        addUserBtn.setIconTextGap(3);
        addUserBtn.setMargin(new java.awt.Insets(2, 14, 2, 14));
        addUserBtn.setPreferredSize(new java.awt.Dimension(150, 32));
        addUserBtn.setRadius(35);
        addUserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserBtnActionPerformed(evt);
            }
        });

        updateBtn.setBackground(new java.awt.Color(4, 14, 163));
        updateBtn.setBorder(null);
        updateBtn.setForeground(new java.awt.Color(255, 255, 255));
        updateBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons8-edit-user-24.png"))); // NOI18N
        updateBtn.setText("Update");
        updateBtn.setAlignmentY(0.0F);
        updateBtn.setBorderColor(new java.awt.Color(0, 102, 204));
        updateBtn.setBorderPainted(false);
        updateBtn.setColor(new java.awt.Color(4, 14, 163));
        updateBtn.setColorClick(new java.awt.Color(0, 102, 204));
        updateBtn.setColorOver(new java.awt.Color(0, 102, 204));
        updateBtn.setFocusPainted(false);
        updateBtn.setFont(new java.awt.Font("Poppins SemiBold", 0, 14)); // NOI18N
        updateBtn.setIconTextGap(3);
        updateBtn.setMargin(new java.awt.Insets(2, 14, 2, 14));
        updateBtn.setPreferredSize(new java.awt.Dimension(150, 32));
        updateBtn.setRadius(35);
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        deleteBtn.setBackground(new java.awt.Color(4, 14, 163));
        deleteBtn.setBorder(null);
        deleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons8-delete-user-24 (1).png"))); // NOI18N
        deleteBtn.setText("Delete");
        deleteBtn.setAlignmentY(0.0F);
        deleteBtn.setBorderColor(new java.awt.Color(0, 102, 204));
        deleteBtn.setBorderPainted(false);
        deleteBtn.setColor(new java.awt.Color(4, 14, 163));
        deleteBtn.setColorClick(new java.awt.Color(0, 102, 204));
        deleteBtn.setColorOver(new java.awt.Color(0, 102, 204));
        deleteBtn.setFocusPainted(false);
        deleteBtn.setFont(new java.awt.Font("Poppins SemiBold", 0, 14)); // NOI18N
        deleteBtn.setIconTextGap(3);
        deleteBtn.setMargin(new java.awt.Insets(2, 14, 2, 14));
        deleteBtn.setPreferredSize(new java.awt.Dimension(150, 32));
        deleteBtn.setRadius(35);
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        roundedTextField1.setForeground(new java.awt.Color(102, 102, 102));
        roundedTextField1.setText("Search");
        roundedTextField1.setFont(new java.awt.Font("Montserrat Medium", 0, 12)); // NOI18N
        roundedTextField1.setPreferredSize(new java.awt.Dimension(150, 38));

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane1.setForeground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane1.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N

        usersTable.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        usersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "User ID", "Employee ID", "Username", "Password", "Role ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        usersTable.setFillsViewportHeight(true);
        usersTable.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        usersTable.setGridColor(new java.awt.Color(255, 255, 255));
        usersTable.setRowHeight(40);
        usersTable.setRowMargin(5);
        usersTable.setSelectionBackground(new java.awt.Color(0, 153, 255));
        usersTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        usersTable.getTableHeader().setResizingAllowed(false);
        usersTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(usersTable);
        if (usersTable.getColumnModel().getColumnCount() > 0) {
            usersTable.getColumnModel().getColumn(0).setResizable(false);
            usersTable.getColumnModel().getColumn(1).setResizable(false);
            usersTable.getColumnModel().getColumn(2).setResizable(false);
            usersTable.getColumnModel().getColumn(3).setResizable(false);
            usersTable.getColumnModel().getColumn(4).setResizable(false);
        }

        javax.swing.GroupLayout usersPanelLayout = new javax.swing.GroupLayout(usersPanel);
        usersPanel.setLayout(usersPanelLayout);
        usersPanelLayout.setHorizontalGroup(
            usersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, usersPanelLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(usersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(usersPanelLayout.createSequentialGroup()
                        .addComponent(roundedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 126, Short.MAX_VALUE)
                        .addComponent(addUserBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(64, 64, 64))
        );
        usersPanelLayout.setVerticalGroup(
            usersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(usersPanelLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(usersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addUserBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roundedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        contentPanel.add(usersPanel, "card2");

        employeesPanel.setBackground(new java.awt.Color(240, 243, 252));

        jScrollPane2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane2.setForeground(new java.awt.Color(255, 255, 255));
        jScrollPane2.setViewportBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane2.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N

        employeesTable.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        employeesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "User ID", "Employee ID", "Username", "Password", "Role ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        employeesTable.setFillsViewportHeight(true);
        employeesTable.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        employeesTable.setGridColor(new java.awt.Color(255, 255, 255));
        employeesTable.setMaximumSize(new java.awt.Dimension(375, 800));
        employeesTable.setMinimumSize(new java.awt.Dimension(375, 800));
        employeesTable.setPreferredScrollableViewportSize(new java.awt.Dimension(300, 600));
        employeesTable.setPreferredSize(new java.awt.Dimension(375, 800));
        employeesTable.setRequestFocusEnabled(false);
        employeesTable.setRowHeight(40);
        employeesTable.setRowMargin(5);
        employeesTable.setRowSelectionAllowed(true);
        employeesTable.setSelectionBackground(new java.awt.Color(0, 153, 255));
        employeesTable.setSelectionForeground(new java.awt.Color(255, 255, 255));
        employeesTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        employeesTable.getTableHeader().setResizingAllowed(false);
        employeesTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(employeesTable);
        if (employeesTable.getColumnModel().getColumnCount() > 0) {
            employeesTable.getColumnModel().getColumn(0).setResizable(false);
            employeesTable.getColumnModel().getColumn(1).setResizable(false);
            employeesTable.getColumnModel().getColumn(2).setResizable(false);
            employeesTable.getColumnModel().getColumn(3).setResizable(false);
            employeesTable.getColumnModel().getColumn(4).setResizable(false);
        }

        addEmployeeBtn.setBackground(new java.awt.Color(4, 14, 163));
        addEmployeeBtn.setBorder(null);
        addEmployeeBtn.setForeground(new java.awt.Color(255, 255, 255));
        addEmployeeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons8-add-user-24.png"))); // NOI18N
        addEmployeeBtn.setText("Add New");
        addEmployeeBtn.setAlignmentY(0.0F);
        addEmployeeBtn.setBorderColor(new java.awt.Color(0, 102, 204));
        addEmployeeBtn.setBorderPainted(false);
        addEmployeeBtn.setColor(new java.awt.Color(4, 14, 163));
        addEmployeeBtn.setColorClick(new java.awt.Color(0, 102, 204));
        addEmployeeBtn.setColorOver(new java.awt.Color(0, 102, 204));
        addEmployeeBtn.setFocusPainted(false);
        addEmployeeBtn.setFont(new java.awt.Font("Poppins SemiBold", 0, 14)); // NOI18N
        addEmployeeBtn.setIconTextGap(3);
        addEmployeeBtn.setMargin(new java.awt.Insets(2, 14, 2, 14));
        addEmployeeBtn.setPreferredSize(new java.awt.Dimension(150, 32));
        addEmployeeBtn.setRadius(35);
        addEmployeeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEmployeeBtnActionPerformed(evt);
            }
        });

        updateEmployeeBtn.setBackground(new java.awt.Color(4, 14, 163));
        updateEmployeeBtn.setBorder(null);
        updateEmployeeBtn.setForeground(new java.awt.Color(255, 255, 255));
        updateEmployeeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons8-edit-user-24.png"))); // NOI18N
        updateEmployeeBtn.setText("Update");
        updateEmployeeBtn.setAlignmentY(0.0F);
        updateEmployeeBtn.setBorderColor(new java.awt.Color(0, 102, 204));
        updateEmployeeBtn.setBorderPainted(false);
        updateEmployeeBtn.setColor(new java.awt.Color(4, 14, 163));
        updateEmployeeBtn.setColorClick(new java.awt.Color(0, 102, 204));
        updateEmployeeBtn.setColorOver(new java.awt.Color(0, 102, 204));
        updateEmployeeBtn.setFocusPainted(false);
        updateEmployeeBtn.setFont(new java.awt.Font("Poppins SemiBold", 0, 14)); // NOI18N
        updateEmployeeBtn.setIconTextGap(3);
        updateEmployeeBtn.setMargin(new java.awt.Insets(2, 14, 2, 14));
        updateEmployeeBtn.setPreferredSize(new java.awt.Dimension(150, 32));
        updateEmployeeBtn.setRadius(35);
        updateEmployeeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateEmployeeBtnActionPerformed(evt);
            }
        });

        deleteEmployeeBtn.setBackground(new java.awt.Color(4, 14, 163));
        deleteEmployeeBtn.setBorder(null);
        deleteEmployeeBtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteEmployeeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons8-delete-user-24 (1).png"))); // NOI18N
        deleteEmployeeBtn.setText("Delete");
        deleteEmployeeBtn.setAlignmentY(0.0F);
        deleteEmployeeBtn.setBorderColor(new java.awt.Color(0, 102, 204));
        deleteEmployeeBtn.setBorderPainted(false);
        deleteEmployeeBtn.setColor(new java.awt.Color(4, 14, 163));
        deleteEmployeeBtn.setColorClick(new java.awt.Color(0, 102, 204));
        deleteEmployeeBtn.setColorOver(new java.awt.Color(0, 102, 204));
        deleteEmployeeBtn.setFocusPainted(false);
        deleteEmployeeBtn.setFont(new java.awt.Font("Poppins SemiBold", 0, 14)); // NOI18N
        deleteEmployeeBtn.setIconTextGap(3);
        deleteEmployeeBtn.setMargin(new java.awt.Insets(2, 14, 2, 14));
        deleteEmployeeBtn.setPreferredSize(new java.awt.Dimension(150, 32));
        deleteEmployeeBtn.setRadius(35);
        deleteEmployeeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteEmployeeBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout employeesPanelLayout = new javax.swing.GroupLayout(employeesPanel);
        employeesPanel.setLayout(employeesPanelLayout);
        employeesPanelLayout.setHorizontalGroup(
            employeesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, employeesPanelLayout.createSequentialGroup()
                .addGroup(employeesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(employeesPanelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addEmployeeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(updateEmployeeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(deleteEmployeeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(employeesPanelLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 860, Short.MAX_VALUE)))
                .addGap(68, 68, 68))
        );
        employeesPanelLayout.setVerticalGroup(
            employeesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, employeesPanelLayout.createSequentialGroup()
                .addContainerGap(57, Short.MAX_VALUE)
                .addGroup(employeesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addEmployeeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateEmployeeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteEmployeeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );

        contentPanel.add(employeesPanel, "card4");

        payrollPanel.setBackground(new java.awt.Color(240, 243, 252));

        javax.swing.GroupLayout payrollPanelLayout = new javax.swing.GroupLayout(payrollPanel);
        payrollPanel.setLayout(payrollPanelLayout);
        payrollPanelLayout.setHorizontalGroup(
            payrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 980, Short.MAX_VALUE)
        );
        payrollPanelLayout.setVerticalGroup(
            payrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 603, Short.MAX_VALUE)
        );

        contentPanel.add(payrollPanel, "card5");

        requestsPanel.setBackground(new java.awt.Color(240, 243, 252));

        javax.swing.GroupLayout requestsPanelLayout = new javax.swing.GroupLayout(requestsPanel);
        requestsPanel.setLayout(requestsPanelLayout);
        requestsPanelLayout.setHorizontalGroup(
            requestsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 980, Short.MAX_VALUE)
        );
        requestsPanelLayout.setVerticalGroup(
            requestsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 603, Short.MAX_VALUE)
        );

        contentPanel.add(requestsPanel, "card6");

        taxReportsPanel.setBackground(new java.awt.Color(240, 243, 252));

        javax.swing.GroupLayout taxReportsPanelLayout = new javax.swing.GroupLayout(taxReportsPanel);
        taxReportsPanel.setLayout(taxReportsPanelLayout);
        taxReportsPanelLayout.setHorizontalGroup(
            taxReportsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 980, Short.MAX_VALUE)
        );
        taxReportsPanelLayout.setVerticalGroup(
            taxReportsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 603, Short.MAX_VALUE)
        );

        contentPanel.add(taxReportsPanel, "card7");

        disputesPanel.setBackground(new java.awt.Color(240, 243, 252));

        javax.swing.GroupLayout disputesPanelLayout = new javax.swing.GroupLayout(disputesPanel);
        disputesPanel.setLayout(disputesPanelLayout);
        disputesPanelLayout.setHorizontalGroup(
            disputesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 980, Short.MAX_VALUE)
        );
        disputesPanelLayout.setVerticalGroup(
            disputesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 603, Short.MAX_VALUE)
        );

        contentPanel.add(disputesPanel, "card8");

        getContentPane().add(contentPanel, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private void homeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeBtnActionPerformed
       headerLabel.setText(homeBtn.getText()); 
       hideAllPanels();
       homePanel.setVisible(true);
       
       
    }//GEN-LAST:event_homeBtnActionPerformed

    private void usersBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usersBtnActionPerformed

        if (Roles.isAdmin(userRole)) {
            headerLabel.setText(usersBtn.getText()); 
            hideAllPanels();
            usersPanel.setVisible(true);
        } else {
            denyAccess();
        }
    }//GEN-LAST:event_usersBtnActionPerformed

    private void employeesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeesBtnActionPerformed
       if (Roles.isAdmin(userRole)||Roles.isHR(userRole)) {
            headerLabel.setText(employeesBtn.getText()); 
            hideAllPanels();
            employeesPanel.setVisible(true);
        } else {
            denyAccess();
        }
    }//GEN-LAST:event_employeesBtnActionPerformed

    private void payrollBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payrollBtnActionPerformed
       if (Roles.isAdmin(userRole)||Roles.isPayroll(userRole)) {
            headerLabel.setText(payrollBtn.getText()); 
            hideAllPanels();
            payrollPanel.setVisible(true);
        } else {
            denyAccess();
        }
    }//GEN-LAST:event_payrollBtnActionPerformed

    private void requestsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestsBtnActionPerformed
       if (Roles.isAdmin(userRole)||Roles.isHR(userRole)) {
            headerLabel.setText(requestsBtn.getText()); 
            hideAllPanels();
            requestsPanel.setVisible(true);
        } else {
            denyAccess();
        }
    }//GEN-LAST:event_requestsBtnActionPerformed

    private void taxReportsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_taxReportsBtnActionPerformed
      if (Roles.isAdmin(userRole)||Roles.isPayroll(userRole)) {
            headerLabel.setText(taxReportsBtn.getText()); 
            hideAllPanels();
            taxReportsPanel.setVisible(true);
        } else {
            denyAccess();
        }
    }//GEN-LAST:event_taxReportsBtnActionPerformed

    private void disputesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disputesBtnActionPerformed
       if (Roles.isAdmin(userRole)) {
            headerLabel.setText(disputesBtn.getText()); 
            hideAllPanels();
            disputesPanel.setVisible(true);
        } else {
            denyAccess();
        }
    }//GEN-LAST:event_disputesBtnActionPerformed

    private void logoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutBtnActionPerformed
       UI_Login uiLogin = new UI_Login();
       uiLogin.goToLoginUI();
    }//GEN-LAST:event_logoutBtnActionPerformed

    private void addUserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserBtnActionPerformed
        AddUserFrame addUserFrame = new AddUserFrame(usersTable);
        addUserFrame.setVisible(true);
    }//GEN-LAST:event_addUserBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
                                       
    int selectedRow = usersTable.getSelectedRow();
    if (selectedRow != -1) {
        String selectedUserId = usersTable.getValueAt(selectedRow, 0).toString();

        UpdateUserFrame updateUserFrame = null;
        try {
            int userId2 = Integer.parseInt(selectedUserId); // Parse selectedUserId to int
            updateUserFrame = new UpdateUserFrame(usersTable, userId2);
            updateUserFrame.loadUserDetails(userId2); // Load user details using userId
            updateUserFrame.setVisible(true);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Invalid user ID format.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (DatabaseException ex) {
            Logger.getLogger(AuthorizedFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(null, "Please select a row to update.", "No Row Selected", JOptionPane.WARNING_MESSAGE);
    }


    }//GEN-LAST:event_updateBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        int selectedRow = usersTable.getSelectedRow();
        if (selectedRow != -1) {
        int selectedUserId = Integer.parseInt(usersTable.getValueAt(selectedRow, 0).toString());
        String username = usersTable.getValueAt(selectedRow, 2).toString(); // For confirmation message
        
        int confirmDelete = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete user '" + username + "'?", "Confirm Deletion", JOptionPane.YES_NO_OPTION);
        
        if (confirmDelete == JOptionPane.YES_OPTION) {
            try {
                // Delete user from database
                DatabaseUserDAO.deleteUserFromDatabase(selectedUserId);
                
                // Remove row from table
                if (usersTable != null) {
                // Update table data with new content from the database
                     usersTable.updateTableData("users", new String[]{"UserID", "EmployeeID", "Username", "UserPassword", "RoleID"}, true);
}
                JOptionPane.showMessageDialog(null, "User '" + username + "' deleted successfully.", "Deletion Success", JOptionPane.INFORMATION_MESSAGE);
                
            } catch (DatabaseException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(), "Deletion Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    } else {
        JOptionPane.showMessageDialog(null, "Please select a row to delete.", "No Row Selected", JOptionPane.WARNING_MESSAGE);
    }

    }//GEN-LAST:event_deleteBtnActionPerformed

    private void addEmployeeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEmployeeBtnActionPerformed
        AddEmployeeFrame addEmployeeFrame = new AddEmployeeFrame(employeesTable);
        addEmployeeFrame.setVisible(true);
    }//GEN-LAST:event_addEmployeeBtnActionPerformed

    private void updateEmployeeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateEmployeeBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateEmployeeBtnActionPerformed

    private void deleteEmployeeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteEmployeeBtnActionPerformed
                                          
    int selectedRow = employeesTable.getSelectedRow();
    
    if (selectedRow != -1) {
        int selectedEmployeeID = Integer.parseInt(employeesTable.getValueAt(selectedRow, 0).toString());
        String fullName = employeesTable.getValueAt(selectedRow, 1).toString() + " " + employeesTable.getValueAt(selectedRow, 2).toString(); // Assuming columns 1 and 2 are LastName and FirstName
        
        int confirmDelete = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete employee '" + fullName + "'?", "Confirm Deletion", JOptionPane.YES_NO_OPTION);
        
        if (confirmDelete == JOptionPane.YES_OPTION) {
            try {
                // Delete employee from database
                DatabaseEmployeeDAO.deleteEmployeeFromDatabase(selectedEmployeeID);
                
                 if (employeesTable != null) {
                    // Update table data with new content from the database
                    employeesTable.updateTableData("employees", new String[]{"EmployeeID", "LastName", "FirstName", "Birthday", "Address", "PhoneNumber", "SSSNumber", "PhilHealthNumber", "TINNumber", "PagIbigNumber", "EmpStatus", "Position", "SupervisorID", "DepartmentID", "BasicSalary", "RiceSubsidy", "PhoneAllowance", "ClothingAllowance", "GrossSemiMonthlyRate", "HourlyRate"}, true);
                    
                    JOptionPane.showMessageDialog(null, "Employee '" + fullName + "' deleted successfully.", "Deletion Success", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Failed to delete employee '" + fullName + "'.", "Deletion Error", JOptionPane.ERROR_MESSAGE);
                }
                
            } catch (DatabaseException ex) {
                JOptionPane.showMessageDialog(null, "Error deleting employee: " + ex.getMessage(), "Deletion Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    } else {
        JOptionPane.showMessageDialog(null, "Please select an employee to delete.", "No Employee Selected", JOptionPane.WARNING_MESSAGE);
    }

    }//GEN-LAST:event_deleteEmployeeBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private UI.RoundedButton addEmployeeBtn;
    private UI.RoundedButton addUserBtn;
    private javax.swing.JPanel contentPanel;
    private UI.RoundedButton deleteBtn;
    private UI.RoundedButton deleteEmployeeBtn;
    private UI.RoundedButton disputesBtn;
    private javax.swing.JPanel disputesPanel;
    private UI.RoundedButton employeesBtn;
    private javax.swing.JPanel employeesPanel;
    private UI.CustomTable employeesTable;
    private javax.swing.JLabel headerLabel;
    private UI.RoundedButton homeBtn;
    private javax.swing.JPanel homePanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel loggedInUserName;
    private javax.swing.JLabel loggedInUserPosition;
    private UI.RoundedButton logoutBtn;
    private UI.RoundedButton payrollBtn;
    private javax.swing.JPanel payrollPanel;
    private UI.RoundedButton requestsBtn;
    private javax.swing.JPanel requestsPanel;
    private UI.RoundedTextField roundedTextField1;
    private UI.RoundedButton taxReportsBtn;
    private javax.swing.JPanel taxReportsPanel;
    private UI.RoundedButton updateBtn;
    private UI.RoundedButton updateEmployeeBtn;
    private UI.RoundedButton usersBtn;
    private javax.swing.JPanel usersPanel;
    private UI.CustomTable usersTable;
    // End of variables declaration//GEN-END:variables
    
    private void initializeDependencies() {
        AuthenticationService authenticationService = new AuthenticateUser(); 
        this.loginController = new LoginController(authenticationService, employeeDAO);
    }
    private void simulateHomeButtonClick() {
        SwingUtilities.invokeLater(() -> {
            homeBtn.setBackground(homeBtn.getColorClick()); // Set background to clicked color
            // Perform any additional actions related to homeBtn being "clicked"
        });
    }
     private void denyAccess() {
        JOptionPane.showMessageDialog(this, "You do not have permission to access this feature", "Access Denied", JOptionPane.ERROR_MESSAGE);
        // Optionally, redirect to home panel or handle as needed
    }

    

    
    private void displayUserInfo(int userId) {
        Employee employee = employeeDAO.getEmployeeById(userId);
        if (employee != null) {
            loggedInUserName.setText(employee.getFirstName() + " " + employee.getLastName());
            loggedInUserPosition.setText(employee.getPosition());
            
        } else {
            JOptionPane.showMessageDialog(this, "User not found", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    private void hideAllPanels() {
        homePanel.setVisible(false);
        usersPanel.setVisible(false);
        employeesPanel.setVisible(false);
        payrollPanel.setVisible(false);
        requestsPanel.setVisible(false);
        taxReportsPanel.setVisible(false);
        disputesPanel.setVisible(false);
    } 
   
}


